{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/Container/Container.module.css"],"names":["module","exports","Container","children","className","styles","container","ContactForm","state","name","number","contactNameId","v4","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","htmlFor","type","pattern","title","required","onChange","id","Component","ContactsList","contacts","onDelete","map","item","onClick","Filter","filter","App","handlerFormSubmit","contact","find","toLowerCase","alert","changeFilter","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c99a720e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__29w4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2Ajxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__mhY4u\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\n\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  contactNameId = v4();\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label htmlFor={this.contactNameId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            id={this.contactNameId}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} name={name} key={id}>\n          {name}: {number}\n          <button type=\"button\" onClick={() => onDelete(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.filter}>\n    Find contact by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  handlerFormSubmit = ({ name, number }) => {\n    const contact = {\n      id: v4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handlerFormSubmit} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDelete={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1wqme\"};"],"sourceRoot":""}